<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.repostitory.GPUserMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.GPUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="email_verified_at" jdbcType="TIMESTAMP" property="email_verified_at"/>
        <result column="remember_token" jdbcType="VARCHAR" property="remember_token"/>
        <result column="creat_at" jdbcType="TIMESTAMP" property="creat_at"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="update_at"/>
        <!--        <result column="competence" jdbcType="VARCHAR" property="competence" />-->
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="activecode" jdbcType="VARCHAR" property="activecode"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,name,phone,password,email,email_verified_at,remember_token,creat_at,update_at,salt,activecode
    </sql>
    <!--查找所有用户-->
    <select id="selectAllUser" parameterType="java.lang.Integer" resultType="com.example.entity.GPUser">
<!--        select * from da_user-->
        select * from da_user limit #{limit,jdbcType=INTEGER} offset #{row,jdbcType=INTEGER}
    </select>
    <!--查询用户数量-->
    <select id="selectUserCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        <!--        select * from da_user-->
        select count(*) from da_user
    </select>
    <!--关键字查找用户列表-->
    <select id="selectAllUserByKeyword" parameterType="java.lang.String" resultType="com.example.entity.GPUser">
        SELECT *  FROM da_user WHERE email LIKE #{keywords1,jdbcType=VARCHAR} OR email LIKE #{keywords2,jdbcType=VARCHAR} OR email LIKE #{keywords3,jdbcType=VARCHAR}
    </select>
    <!--通过email查找-->
    <select id="selectUserByEmail" parameterType="java.lang.String" resultType="com.example.entity.GPUser">
        select *
        from da_user
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <!--注册用户（插入用户）-->
    <insert id="insertSelective" parameterType="com.example.entity.GPUser">
        insert into da_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="email_verified_at != null">
                email_verified_at,
            </if>
            <if test="remember_token != null">
                remember_token,
            </if>
            <if test="creat_at != null">
                creat_at,
            </if>
            <if test="update_at != null">
                update_at,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="activecode != null">
                activecode,
            </if>
            <if test="jurisdiction != null">
                jurisdiction
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="email_verified_at != null">
                #{email_verified_at,jdbcType=TIMESTAMP},
            </if>
            <if test="remember_token != null">
                #{remember_token,jdbcType=VARCHAR},
            </if>
            <if test="creat_at != null">
                #{creat_at,jdbcType=TIMESTAMP},
            </if>
            <if test="update_at != null">
                #{update_at,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="activecode != null">
                #{activecode,jdbcType=VARCHAR},
            </if>
            <if test="jurisdiction != null">
                #{jurisdiction,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <update id="updateToken" parameterType="com.example.entity.GPUser">
        update da_user
        set remember_token = #{remember_token,jdbcType=VARCHAR}
        where email = #{email,jdbcType=VARCHAR}
    </update>
    <update id="deletLoginInfo" parameterType="java.lang.String">
        update da_user
        set remember_token = NUll
        where email = #{email,jdbcType=VARCHAR}
    </update>
    <select id="checkActiveCodebyEmail" parameterType="java.lang.String" resultType="java.lang.String">
        select activecode from da_user where email = #{email,jdbcType=VARCHAR}
    </select>
    <update id="changeActiveCode" parameterType="java.lang.String">
        update da_user
        set activecode = #{activecode,jdbcType=VARCHAR}
        where email = #{email,jdbcType=VARCHAR}
    </update>
    <update id="changeActiveTime" parameterType="com.example.entity.GPUser">
        update da_user
        set email_verified_at = #{email_verified_at,jdbcType=TIMESTAMP}
        where email = #{email,jdbcType=VARCHAR}
    </update>
    <update id="updatePassword" parameterType="com.example.entity.GPUser">
        update da_user
        set password = #{password,jdbcType=VARCHAR},salt=#{salt,jdbcType=VARCHAR}
        where email = #{email,jdbcType=VARCHAR}
    </update>
        <delete id="delUserByEmail" parameterType="java.lang.String">
            delete from da_user
            where email = #{email,jdbcType=VARCHAR}
        </delete>
</mapper>
        <!--    <delete id="delUserByID"  parameterType="java.util.List">-->
        <!--        delete from tbl_user-->
        <!--        where id in-->
        <!--        <foreach collection="ids" item="xxx" open="(" close=")" separator=",">-->
        <!--            #{xxx}-->
        <!--        </foreach>-->
        <!--    </delete>-->
        <!--    <select id="selectUserByName" resultType="com.seventeam.entity.TUser">-->
        <!--        select * from tbl_user where username =#{name}-->
        <!--    </select>-->
        <!--    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
        <!--        delete from tbl_user-->
        <!--        where user_id = #{userId,jdbcType=INTEGER}-->
        <!--    </delete>-->
        <!--    <insert id="insert" parameterType="com.seventeam.entity.TUser">-->
        <!--        insert into tbl_user (user_id, dept_id, username,-->
        <!--        password, email, phone,-->
        <!--        sex, salt, status, del_flag,-->
        <!--        remark)-->
        <!--        values (#{userId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},-->
        <!--        #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},-->
        <!--        #{sex,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR},-->
        <!--        #{remark,jdbcType=VARCHAR})-->
        <!--    </insert>-->
        <!--    <update id="updateByPrimaryKeySelective" parameterType="com.seventeam.entity.TUser">-->
        <!--        update tbl_user-->
        <!--        <set>-->
        <!--            <if test="deptId != null">-->
        <!--                dept_id = #{deptId,jdbcType=INTEGER},-->
        <!--            </if>-->
        <!--            <if test="username != null">-->
        <!--                username = #{username,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="password != null">-->
        <!--                password = #{password,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="email != null">-->
        <!--                email = #{email,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="phone != null">-->
        <!--                phone = #{phone,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="sex != null">-->
        <!--                sex = #{sex,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="salt != null">-->
        <!--                salt = #{salt,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--            <if test="status != null">-->
        <!--                status = #{status,jdbcType=CHAR},-->
        <!--            </if>-->
        <!--            <if test="delFlag != null">-->
        <!--                del_flag = #{delFlag,jdbcType=CHAR},-->
        <!--            </if>-->
        <!--            <if test="remark != null">-->
        <!--                remark = #{remark,jdbcType=VARCHAR},-->
        <!--            </if>-->
        <!--        </set>-->
        <!--        where user_id = #{userId,jdbcType=INTEGER}-->
        <!--    </update>-->
        <!--    <update id="updateByPrimaryKey" parameterType="com.seventeam.entity.TUser">-->
        <!--        update tbl_user-->
        <!--        set dept_id = #{deptId,jdbcType=INTEGER},-->
        <!--        username = #{username,jdbcType=VARCHAR},-->
        <!--        password = #{password,jdbcType=VARCHAR},-->
        <!--        email = #{email,jdbcType=VARCHAR},-->
        <!--        phone = #{phone,jdbcType=VARCHAR},-->
        <!--        sex = #{sex,jdbcType=VARCHAR},-->
        <!--        salt = #{salt,jdbcType=VARCHAR},-->
        <!--        status = #{status,jdbcType=CHAR},-->
        <!--        del_flag = #{delFlag,jdbcType=CHAR},-->
        <!--        remark = #{remark,jdbcType=VARCHAR}-->
        <!--        where user_id = #{userId,jdbcType=INTEGER}-->
        <!--    </update>-->
